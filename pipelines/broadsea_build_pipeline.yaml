# Build and publish broadsea-webtools (Atlas / WebApi) and broadsea-methods (Achilles / ETL-Synthea) to ACR pipeline
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - apps/broadsea-methods
    - apps/broadsea-webtools

parameters:
# this should come from /infra/terraform/bootstrap
- name: envVariableGroupName
  type: string
  displayName: Variable Group Name with Environment Settings
  default: sharing-dev-omop-env-vg
  values:
  - sharing-prod-omop-env-vg
  - sharing-stage-omop-env-vg
  - sharing-qa-omop-env-vg
  - sharing-dev-omop-env-vg
- name: overrideBranchEnvVariableGroupName
  type: boolean
  default: false
  displayName: Use the parameter value for envVariableGroupName for the variable group name instead of relying on the branch name to derive the variable group
  values:
  - true
  - false

- name: publishBroadseaWebApiScript
  type: boolean
  default: true
  displayName: Publish broadsea webapi script as a pipeline artifact
- name: publishBroadseaWebtools
  type: boolean
  default: true
  displayName: Build and publish broadsea-webtools (Atlas / WebApi) to ACR
- name: publishBroadseaMethods
  type: boolean
  default: true
  displayName: Build and publish broadsea-methods (Achilles / ETL-Synthea) to ACR

- name: buildConfiguration
  type: string
  default: Dev
  displayName: Build Configuration for scripts
  values:
  - Dev
- name: sourceFolder
  type: string
  default: sql
  displayName: Source folder for scripts (e.g. for sql/scripts use sql)

# WebAPI Parameters
- name: buildArtifactFolderPathWebApi
  type: string
  default: webApi
  displayName: Build Artifact Folder Path for WebAPI Script
  values:
  - webApi
- name: buildArtifactNameWebApi
  type: string
  default: webApiScript
  displayName: Build Artifact for WebApi Script
  values:
  - webApiScript
- name: scriptFileNameWebApi
  type: string
  default: Web_Api_Refresh.sql
  displayName: Web API Script file name (e.g. Web_Api_Refresh.sql)

# Broadsea Webtools (Atlas / WebApi) Docker to ACR Settings
- name: dockerBuildSourceFolderBroadseaWebTools
  type: string
  default: apps/broadsea-webtools
  displayName: Source Folder used for docker build for broadsea-webtools, e.g. if the folder 'my-folder' has the Dockerfile, specify 'my-folder'.  Defaults to apps/broadsea-webtools.
- name: dockerBuildImageNameBroadseaWebTools
  type: string
  default: broadsea-webtools
  displayName: Image Name for broadsea-webtools (e.g. broadsea-webtools) to push into ACR.  Defaults to broadsea-webtools.
- name: dockerBuildImageTagBroadseaWebTools
  type: string
  default: latest
  displayName: Image Tag for broadsea-webtools (e.g. latest) to push into ACR.  Defaults to latest.

# Broadsea Methods (Achilles / ETL-Synthea) Docker to ACR Settings
- name: dockerBuildSourceFolderBroadseaMethods
  type: string
  default: apps/broadsea-methods
  displayName: Source Folder used for docker build for broadsea-methods, e.g. if the folder 'my-folder' has the Dockerfile, specify 'my-folder'.  Defaults to apps/broadsea-methods.
# TODO: move to variables group
- name: dockerBuildImageNameBroadseaMethods
  type: string
  default: broadsea-methods
  displayName: Image Name for broadsea-methods (e.g. broadsea-methods) to push into ACR.  Defaults to broadsea-methods.
- name: dockerBuildImageTagBroadseaMethods
  type: string
  default: latest
  displayName: Image Tag for broadsea-methods (e.g. latest) to push into ACR.  Defaults to latest.

variables:
  - ${{ if eq(parameters['overrideBranchEnvVariableGroupName'], true) }}:
    - group: ${{ parameters.envVariableGroupName }}
  - ${{ elseif eq(variables['Build.SourceBranchName'], 'master') }}:
    - group: sharing-prod-omop-env-vg
  - ${{ elseif eq(variables['Build.SourceBranchName'], 'stage') }}:
    - group: sharing-stage-omop-env-vg
  - ${{ elseif eq(variables['Build.SourceBranchName'], 'qa') }}:
    - group: sharing-qa-omop-env-vg
  - ${{ elseif eq(variables['Build.SourceBranchName'], 'develop') }}:
    - group: sharing-dev-omop-env-vg
  - ${{ else }}:
    - group: sharing-dev-omop-env-vg

  - name: "PublishBroadseaWebApiScript"
    value: ${{ parameters.publishBroadseaWebApiScript }}
  - name: "PublishBroadseaWebtools"
    value: ${{ parameters.publishBroadseaWebtools }}
  - name: "PublishBroadseaMethods"
    value: ${{ parameters.publishBroadseaMethods }}

# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?msclkid=8f192dd7aeda11eca460e7d8bc1031b3&view=azure-devops&tabs=yaml#capabilities-and-limitations
# pool: 'Azure Pipelines' # You can use the default Azure DevOps agent pool provided you have not run into time limits
pool: $(adoVMSSBuildAgentPoolName) # re-enable when VMSS is ready and you have granted access to the agent pool
# pool: 'sharing-dev-ado-build-linux-vmss-agent-pool' # this should match the name of your azure devops VMSS agent pool.  You can comment this out when you have authorized your Azure DevOps agent pool and then rely on the variable from your Variable Group.

stages:
- stage: Build_and_push_broadsea_webtools
  displayName: Build and Push Broadsea Webtools Artifacts
  jobs:
  - ${{ if eq(variables.PublishBroadseaWebApiScript, 'true') }}:
    - job:
      displayName: Publish Web Api Scripts to Pipeline Artifacts 
      steps:
      # publish the webapi script
      - template: templates/copy_and_publish_file.yml
        parameters:
          sourceFolder: '${{ parameters.sourceFolder }}/scripts/'
          targetFolder: '${{ parameters.buildConfiguration }}'
          fileName: ${{ parameters.scriptFileNameWebApi }}
          buildArtifactFolderPath: ${{ parameters.buildArtifactFolderPathWebApi }}
          buildArtifactName: ${{ parameters.buildArtifactNameWebApi }}
  
  - ${{ if eq(variables.PublishBroadseaWebtools, 'true') }}:
    - job:
      displayName: Build and Publish broadsea-webtools (Atlas / Web Api) Docker Image to Azure Container Registry
      steps:
      - template: templates/build_and_push_docker_to_acr.yml
        parameters:
          serviceConnection: '$(serviceConnection)'
          containerRegistry: '$(containerRegistry)'
          sourceFolder: ${{ parameters.dockerBuildSourceFolderBroadseaWebTools }}
          imageName: ${{ parameters.dockerBuildImageNameBroadseaWebTools }}
          imageTag: ${{ parameters.dockerBuildImageTagBroadseaWebTools }}

- ${{ if eq(variables.PublishBroadseaMethods, 'true') }}:
  - stage: Build_and_push_broadsea_methods
    displayName: Build and Publish broadsea-methods (Achilles / ETL-Synthea) Docker image
    jobs:
    - job:
      steps:
      - template: templates/build_and_push_docker_to_acr.yml
        parameters:
          serviceConnection: '$(serviceConnection)'
          containerRegistry: '$(containerRegistry)'
          sourceFolder: ${{ parameters.dockerBuildSourceFolderBroadseaMethods }}
          imageName: ${{ parameters.dockerBuildImageNameBroadseaMethods }}
          imageTag: ${{ parameters.dockerBuildImageTagBroadseaMethods }}