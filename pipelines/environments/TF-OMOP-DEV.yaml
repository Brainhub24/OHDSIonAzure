# Terraform release pipeline for environment
# TODO update resource group in .tfvars
parameters: 
# this should come from the /infra/scripts/ado_bootstrap.sh
- name: variableGroupName
  type: string 
  default: ado-omop-bootstrap-vg
  displayName: Variable Group Name
  values:
  - ado-omop-bootstrap-vg
  - ado-sharing-dev-omop-bootstrap-vg

variables:
- group: ${{ parameters.variableGroupName }}
- name: tf_directory
  value: 'infra/terraform'
- name: terraform_version
  value: '1.1.4'
- name: pool
  value: 'Azure Pipelines'
  
- name: azure_service_connection
  value: 'sp-omop-service-connection'

- name: tf_storage_resource_group
  value: 'ado-omop-bootstrap-rg'
- name: tf_storage_region
  value: 'westus3'
- name: tf_storage_account_name
  value: 'omopdevtfstatestoracc'
- name: tf_storage_container_name
  value: 'dev-omop-statefile-container'
- name: tf_state_filename
  value: 'terraform.tfstate'

- name: tf_init_command_options
  value: '-input=false'
- name: tf_validate_command_options
  value: ''
- name: tf_refresh_command_options
  value: '-input=false -lock=false'
- name: tf_plan_command_options
  value: '-input=false -lock=false -refresh=false -out plan.out -var="omop_password=$(omopPassword)"'
- name: tf_apply_command_options
  value: '-input=false -refresh=false -var="omop_password=$(omopPassword)"'

- name: tf_plan_environment
  value: 'omop-tf-plan-environment'
- name: tf_approval_environment
  value: 'omop-tf-approval-environment'

# Disable CI Triggers
trigger: none

# Release instructions
stages:
- stage: Terraform_Plan
  jobs:
  - deployment: Terraform_Plan
    displayName: Terraform Plan
    pool: $(pool)
    workspace:
      clean: all
    continueOnError: 'false'
    environment: $(tf_plan_environment)
    strategy:
      runOnce:
        deploy:
          steps:
            - template: ../templates/terraform/tf_plan.yml

- stage: Approved_Terraform
  dependsOn:
    - Terraform_Plan # Explicitly set dependency graph

  # Conditions
  # 1. If TF Plan succeeded
  # 2. If build reason isn't a pull request

  condition: |
    and(
      succeeded(),
      ne(variables['Build.Reason'], 'PullRequest')
    )

  jobs:
  - deployment: Approved_Terraform
    displayName: Approved Terraform
    pool: $(pool)
    workspace:
      clean: all
    continueOnError: 'false'
    environment: $(tf_approval_environment)
    strategy:
      runOnce:
        deploy:
          steps:
          # TODO point to higher environment path for higher environments
            - template: ../templates/terraform/tf_apply.yml